ax P-Zero (is (plus (Z) ($1)) ($1));
ax P-Succ (is (plus (S($1)) ($2)) (S($0)))
  (is (plus ($1) ($2)) ($0));
ax T-Zero (is (times (Z) ($1)) (Z));
ax T-Succ (is (times (S($1)) ($2)) ($4))
  (is (times ($1) ($2)) ($3)) 
  (is (plus ($2) ($3)) ($4));

ax R-Plus (--> (+ ($1) ($2)) ($3))
  (is (plus ($1) ($2)) ($3));
ax R-Times (--> (* ($1) ($2)) ($3))
  (is (times ($1) ($2)) ($3));

ax R-PlusL (--> (+ ($1) ($2)) (+ ($3) ($2)))
  (--> ($1) ($3));
ax R-PlusR (--> (+ ($1) ($2)) (+ ($1) ($3)))
  (--> ($1) ($3));

ax R-TimesL (--> (* ($1) ($2)) (* ($3) ($2)))
  (--> ($1) ($3));
ax R-TimesR (--> (* ($1) ($2)) (* ($1) ($3)))
  (--> ($1) ($3));

ax DR-Plus (-d-> (+ ($1) ($2)) ($3))
  (is (plus ($1) ($2)) ($3));
ax DR-Times (-d-> (* ($1) ($2)) ($3))
  (is (times ($1) ($2)) ($3));

ax DR-PlusL (-d-> (+ ($1) ($2)) (+ ($3) ($2)))
  (-d-> ($1) ($3));
ax DR-PlusR (-d-> (+ ($1) ($2)) (+ ($1) ($3)))
  (-d-> ($1) ($3));

ax DR-TimesL (-d-> (* ($1) ($2)) (* ($3) ($2)))
  (-d-> ($1) ($3));
ax DR-TimesR (-d-> (* ($1) ($2)) (* ($1) ($3)))
  (-d-> ($1) ($3));

ax MR-Zero (-*-> ($1) ($1));
ax MR-Multi (-*-> ($1) ($2))
  (-*-> ($1) ($3)) (-*-> ($3) ($2));
ax MR-One (-*-> ($1) ($2))
  (--> ($1) ($2));

th (-*-> (+ (Z) (S(S(Z)))) (S(S(Z))));
  ap MR-One; ap R-Plus; ap P-Zero;
qed;

th (-d-> (+ (* (S(Z)) (S(Z))) (* (S(Z)) (S(Z)))) 
         (+            (S(Z)) (* (S(Z)) (S(Z)))));
  ap DR-PlusL; ap DR-Times;
  aw T-Succ 3:(Z); nat;
qed;

th (--> (+ (* (S(Z)) (S(Z))) (* (S(Z)) (S(Z)))) 
        (+ (* (S(Z)) (S(Z))) (S(Z))));
  ap R-PlusR; 
  ap R-Times;
  nat;
qed;